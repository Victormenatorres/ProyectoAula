package vista;

import controlador.Ctrl_Categoria;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Categoria;

/**
 *
 * @author LENOVO
 */
public class InterGestionarCategoria extends javax.swing.JInternalFrame {

    private int idCategoria;

    public InterGestionarCategoria() {
        initComponents();
        this.setSize(new Dimension(600, 400));
        this.setTitle("Gestionar Categorias");

        this.CargarTablaCategorias();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_Categorias = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        Button_Editar = new javax.swing.JButton();
        Button_Eliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_Descripcion = new javax.swing.JTextField();
        wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Categorias");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Table_Categorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table_Categorias);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 350, 250));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Button_Editar.setBackground(new java.awt.Color(204, 204, 204));
        Button_Editar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Button_Editar.setText("Editar");
        Button_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_EditarActionPerformed(evt);
            }
        });
        jPanel2.add(Button_Editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 13, -1, -1));

        Button_Eliminar.setBackground(new java.awt.Color(204, 204, 204));
        Button_Eliminar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Button_Eliminar.setText("Eliminar");
        Button_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_EliminarActionPerformed(evt);
            }
        });
        jPanel2.add(Button_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 130, 80));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Descripcion:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        txt_Descripcion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel3.add(txt_Descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 170, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 190, 80));

        wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        getContentPane().add(wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_EditarActionPerformed
        if (idCategoria == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione una categoría de la tabla para editar");
            return;
        }

        String nuevaDescripcion = txt_Descripcion.getText().trim();

        if (nuevaDescripcion.isEmpty()) {
            JOptionPane.showMessageDialog(null, "La descripción no puede estar vacía");
            return;
        }

        // Buscar la categoría actual para comparar
        Categoria categoriaActual = null;
        for (Categoria c : Ctrl_Categoria.listaCategorias) {
            if (c.getIdCategoria() == idCategoria) {
                categoriaActual = c;
                break;
            }
        }

        if (categoriaActual == null) {
            JOptionPane.showMessageDialog(null, "No se encontró la categoría seleccionada");
            return;
        }

        // Validar si no se ha hecho ningún cambio
        if (categoriaActual.getDescripcion().equalsIgnoreCase(nuevaDescripcion)) {
            JOptionPane.showMessageDialog(null, "No se detectaron cambios");
            return;
        }

        // Proceder con la edición
        Categoria categoria = new Categoria();
        categoria.setIdCategoria(idCategoria);
        categoria.setDescripcion(nuevaDescripcion);

        Ctrl_Categoria controlCategoria = new Ctrl_Categoria();

        if (controlCategoria.editarCategoria(categoria)) {
            JOptionPane.showMessageDialog(null, "Categoría actualizada exitosamente");
            CargarTablaCategorias();
            txt_Descripcion.setText("");
            idCategoria = 0; // Reiniciar id
        } else {
            JOptionPane.showMessageDialog(null, "Error al actualizar la categoría");
        }


    }//GEN-LAST:event_Button_EditarActionPerformed

    private void Button_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_EliminarActionPerformed
        if (idCategoria == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione una categoría de la tabla para eliminar");
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea eliminar esta categoría?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            Ctrl_Categoria controlCategoria = new Ctrl_Categoria();

            if (controlCategoria.eliminarCategoria(idCategoria)) {
                JOptionPane.showMessageDialog(null, "Categoría eliminada correctamente");
                CargarTablaCategorias(); // Recarga la tabla
                txt_Descripcion.setText(""); // Limpia campo
                idCategoria = 0; // Reinicia ID
            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar la categoría");
            }
        }


    }//GEN-LAST:event_Button_EliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Editar;
    private javax.swing.JButton Button_Eliminar;
    public static javax.swing.JTable Table_Categorias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_Descripcion;
    private javax.swing.JLabel wallpaper;
    // End of variables declaration//GEN-END:variables

    public void CargarTablaCategorias() {
        DefaultTableModel model = new DefaultTableModel();

        // Columnas de la tabla
        model.addColumn("Id");
        model.addColumn("Descripción");
        model.addColumn("Estado");

        // Obtener la lista de categorías (simulada)
        Ctrl_Categoria controlCategoria = new Ctrl_Categoria();
        List<Categoria> lista = controlCategoria.obtenerCategorias();

        // Rellenar las filas
        for (Categoria categoria : lista) {
            Object[] fila = new Object[3];
            fila[0] = categoria.getIdCategoria();           // ID
            fila[1] = categoria.getDescripcion();       // Descripción
            fila[2] = categoria.getEstado();  // Estado
            model.addRow(fila);
        }

        Table_Categorias.setModel(model);
        Table_Categorias.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = Table_Categorias.rowAtPoint(e.getPoint());
                if (fila_point > -1) {
                    idCategoria = (int) model.getValueAt(fila_point, 0); // Guardamos el idCategoria
                    EnviarDatosCategoriaSeleccionada(fila_point); // Pasamos la fila
                }
            }
        });
    }

    private void EnviarDatosCategoriaSeleccionada(int fila) {
        if (fila >= 0) {
            String descripcion = Table_Categorias.getValueAt(fila, 1).toString(); // Columna 1 = Descripción
            txt_Descripcion.setText(descripcion);
        }
    }

}
